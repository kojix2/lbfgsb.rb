module Lbfgsb
  type result = {
    task: String,
    x: Numo::DFloat,
    fnc: Float,
    jcb: Numo::DFloat,
    n_iter: Integer,
    n_fev: Integer,
    n_jev: Integer,
    success: bool
  }

  VERSION: String

  DBL_EPSILON: Float

  def self?.minimize: (fnc: Method | Proc fnc, x_init: Numo::DFloat x_init, jcb: Method | Proc | bool jcb,
    ?args: untyped args, ?bounds: Numo::DFloat? bounds, ?factr: Float factr, ?pgtol: Float pgtol,
    ?maxcor: Integer maxcor, ?maxiter: Integer maxiter,
    ?verbose: Integer? verbose) -> result

  private

  def self?.fnc: (Method | Proc fnc, Numo::DFloat x, untyped args) -> Float

  def self?.jcb: (Method | Proc jcb, Numo::DFloat x, untyped args) -> Numo::DFloat

  def self?.min_l_bfgs_b: (Method | Proc fnc, Numo::DFloat x, Method | Proc | bool jcb, untyped args,
    Numo::DFloat l, Numo::DFloat u, Numo::DFloat nbd, Integer maxcor, Float ftol, Float gtol, Integer maxiter,
    Integer? disp) -> result
end
